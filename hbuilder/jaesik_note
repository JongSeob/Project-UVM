============================================ 1. FindBin ==============================================================
FindBin : 실행되는 현재 코드의 위치를 따옴.

##################################
# $home/00_Perl2Py/findbin.pl
##################################
use FindBin qw($Bin);
use lib "$Bin/../lib";
print "$Bin\n"; 
###################################
# 결과 : /home/jaesik/00_Perl2Py
###################################

============================================ 2. Template ==============================================================
###################################
# $home/00_Perl2Py/template.pl
###################################
다운로드 : $ sudo cpan Template
예제 : https://www.oreilly.com/library/view/perl-template-toolkit/0596004761/ch01.html
파일에서 [% 변수명 %] 으로 적혀져있는 템플릿 파일에 변수명 => 값 을 인가할 수 있음.
(ex) 
##################################
# template.tt
내가 사는 곳은 [% planet %] 이다
##################################
# template.pl
use Template;
my $tt = Template->new();
my $input = 'template.tt'
my $vars = { planet => 'Earth',}; - template.pl
$tt->process($input, $vars) || die $tt->error();
#################################
# 결과 : 
내가 사는 곳은 Earth 이다
#################################
template.tt 에서, [% planet = 20 %] 을 미리 지정해두면 
내가 사는 곳은 20 이다 
라고 출력됨.

#################################
# myfile.tt2
#################################
신기한건, 템플릿 파일 자체에서 뭔가를 할 수 있다는거다.
(1) 값 지정
template.tt 에서, [% planet = 20 %] 을 미리 지정해두면 
내가 사는 곳은 20 이다 
라고 출력됨.
(2) 내용 Include
Hi [% INCLUDE bar %] 안녕
[% BLOCK bar %] Hello [% END %]
이라하면, Hi 안녕 Hello 가 아니라 Hi Hello 안녕 이 됨.
(3) IF, ELSIF, ELSE 도 사용가능. (그 외 switch case, while, foreach 등등도 마찬가지로 사용가능하다)
[% IF age < 10 %] Hello [% END %] 이고 age 를 8로 설정하고 process 했다면 Hello 가 출력됨.

============================================ 3. Verilog ==============================================================
============================================ 4. Getopt:Long ==========================================================
펄 코드에 옵션 던지는 패키지임.
#############################
# getopt.pl
#############################
GetOptions ( 'name=s' => \$name, 'employed!' => \$employed, );
print "I am $name, and". ($employed? '':'un'). "employed.\n";
#############################
# 실행 : perl getopt.pl -name Jaesik -employed
# 결과 : I am Jaesik, and employed.
#############################

========================================= 5. File::Find =================================================
펄 코드가 실행되는 위치에서부터 하위 디렉토리까지 찾음
##############################
# filefind.pl
##############################
find ( { wanted -> \&findfiles, }, 'template' );
sub findfiles { print "$File::Find::name, "; }
#############################
디렉토리 예시 : template/dummy/template
결과 : template, template/dummy, template/dummy/template
#############################


========================================= 6. File::Path =================================================
디렉토리 만들고 삭제하는거임
##########################
# filepath.pl
#########################
use File::Path qw(make_path remove_tree);
@created = make_path('foo/bar/baz');
make_path('foo/bar/baz'); # 디렉토리 생성!
$remove_count = remove_tree('foo/bar/baz'); # foo/bar 까지는 살아있고 baz 만 삭제!
